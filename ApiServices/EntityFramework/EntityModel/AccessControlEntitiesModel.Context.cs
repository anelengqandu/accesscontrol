//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ApiServices.EntityFramework.EntityModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SmartMunEntities : DbContext
    {
        public SmartMunEntities()
            : base("name=SmartMunEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CEM_BurialApplication> CEM_BurialApplication { get; set; }
        public virtual DbSet<CEM_BurialApplication_Deceased_Details> CEM_BurialApplication_Deceased_Details { get; set; }
        public virtual DbSet<CEM_LIST_CEMETERY> CEM_LIST_CEMETERY { get; set; }
        public virtual DbSet<CEM_LIST_CEMETERY_SUPERVISOR> CEM_LIST_CEMETERY_SUPERVISOR { get; set; }
        public virtual DbSet<CEM_LIST_UNDERTAKER> CEM_LIST_UNDERTAKER { get; set; }
    
        public virtual ObjectResult<AccessControlListByCemetery_Result> AccessControlListByCemetery(Nullable<int> cemeteryId)
        {
            var cemeteryIdParameter = cemeteryId.HasValue ?
                new ObjectParameter("CemeteryId", cemeteryId) :
                new ObjectParameter("CemeteryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AccessControlListByCemetery_Result>("AccessControlListByCemetery", cemeteryIdParameter);
        }
    
        public virtual ObjectResult<Incomplete_Burial_Application_Result> Incomplete_Burial_Application(Nullable<System.DateTime> startdate, Nullable<System.DateTime> enddate, string reportType)
        {
            var startdateParameter = startdate.HasValue ?
                new ObjectParameter("startdate", startdate) :
                new ObjectParameter("startdate", typeof(System.DateTime));
    
            var enddateParameter = enddate.HasValue ?
                new ObjectParameter("enddate", enddate) :
                new ObjectParameter("enddate", typeof(System.DateTime));
    
            var reportTypeParameter = reportType != null ?
                new ObjectParameter("reportType", reportType) :
                new ObjectParameter("reportType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Incomplete_Burial_Application_Result>("Incomplete_Burial_Application", startdateParameter, enddateParameter, reportTypeParameter);
        }
    
        public virtual int SoftwareWebportalUsageReport(Nullable<int> type, string fromDate, string toDate)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            var fromDateParameter = fromDate != null ?
                new ObjectParameter("FromDate", fromDate) :
                new ObjectParameter("FromDate", typeof(string));
    
            var toDateParameter = toDate != null ?
                new ObjectParameter("ToDate", toDate) :
                new ObjectParameter("ToDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SoftwareWebportalUsageReport", typeParameter, fromDateParameter, toDateParameter);
        }
    
        public virtual ObjectResult<sp_Undertaker_QuotationForBurialApplication_Result> sp_Undertaker_QuotationForBurialApplication(Nullable<long> appId, Nullable<long> tariffId)
        {
            var appIdParameter = appId.HasValue ?
                new ObjectParameter("appId", appId) :
                new ObjectParameter("appId", typeof(long));
    
            var tariffIdParameter = tariffId.HasValue ?
                new ObjectParameter("tariffId", tariffId) :
                new ObjectParameter("tariffId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Undertaker_QuotationForBurialApplication_Result>("sp_Undertaker_QuotationForBurialApplication", appIdParameter, tariffIdParameter);
        }
    }
}
